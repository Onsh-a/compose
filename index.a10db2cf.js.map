{"mappings":"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","sources":["src/js/helpers/romanizeNumbers.js","src/js/helpers/Chord.js","src/js/helpers/Keyboard.js","src/js/helpers/Guitar.js","src/js/helpers/Scale.js","src/js/helpers/customSelect.js","src/js/main.js"],"sourcesContent":["export default function romanize(arabicNumber) {\n\tif (arabicNumber === 1) return 'root';\n\tif (!+arabicNumber) return NaN;\n\tlet digits = String(+arabicNumber).split('');\n\tlet key = ['','C','CC','CCC','CD','D','DC','DCC','DCCC','CM',\n\t\t'','X','XX','XXX','XL','L','LX','LXX','LXXX','XC',\n\t\t'','I','II','III','IV','V','VI','VII','VIII','IX'];\n\tlet roman = '', i = 3;\n\twhile (i--) roman = (key[+digits.pop() + (i * 10)] || '') + roman;\n\treturn Array(+digits.join('') + 1).join('M') + roman;\n};\n","export default class Chord {\n  patterns = {\n    maj: [0, 4, 7],\n    m: [0, 3, 7],\n    dim: [0, 3, 6],\n    aug: [0, 4, 8],\n  };\n  isSharp = true;\n  diatonicPatterns = {\n    major: ['', 'm', 'm', '', '', 'm', 'dim'],\n    natural_minor: ['m', 'dim', '', 'm', 'm', '', ''],\n    harmonic_minor: ['m', 'dim', 'aug', 'm', '', '', 'dim'],\n    melodic_minor: ['m', 'm', 'aug', '', '', 'dim', 'dim'],\n  }\n  _notes = {\n    sharp: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\n    flat: ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'F♭', 'G', 'A♭', 'A', 'B♭', 'B'],\n  }\n  _getNotes() {\n    return this._notes[this.isSharp ? 'sharp' : 'flat'];\n  }\n  setIsSharp(isSharp) {\n    this.isSharp = isSharp;\n  }\n\n  calcChord(chord) {\n    const chordType = this.getChordType(chord);\n    const startPoint = this._getNotes().indexOf(this.getNote(chord));\n    const sortedArr = this._getNotes().slice(startPoint).concat(this._getNotes().slice(0, startPoint));\n    return this.patterns[chordType].map(item => sortedArr[item]);\n  };\n\n  getChordType(chord) {\n    let chordType = chord.split('');\n    chordType = chordType.filter(item => /[a-zA-Z]+/.test(item)); // trim '#'\n    chordType.shift();\n    return chordType.join('') || 'maj';\n  }\n\n  getNote(chord) {\n    return chord.split('').includes('#') ? `${chord[0]}#` : `${chord[0]}`;\n  }\n\n  calcDiatonic(scale, scaleName) {\n    const diatonicPattern = this.diatonicPatterns[scaleName];\n    return diatonicPattern.map((item, index) => `${scale[index]}${item}`);\n  }\n}\n","export default class Keyboard {\n  constructor(keyboardCanvas, isSharp = true) {\n    this.canvas = keyboardCanvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.isSharp = isSharp;\n  }\n\n  _notes = {\n    sharp: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\n    flat: ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'F♭', 'G', 'A♭', 'A', 'B♭', 'B'],\n  }\n  pianoKeyboard = [true, false, true, false, true, true, false, true, false, true, false, true];\n  xCoordinate = 15;\n  yCoordinate = 15;\n\n  preparedKeysData(activeNotes) {\n    return this._getNotes().concat(this._getNotes()).map((item) => {\n      return {\n        isActive: activeNotes.includes(item),\n        note: item,\n        isRoot: item === activeNotes[0],\n      }\n    });\n  }\n\n  _getNotes() {\n    return this._notes[this.isSharp ? 'sharp' : 'flat'];\n  }\n\n  setIsSharp(isSharp) {\n    this.isSharp = isSharp;\n  }\n\n  renderKeyboard(activeNotes) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.canvas.width = 900;\n    this.canvas.height = 380;\n    this.ctx.scale(2, 2);\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    activeNotes = this.preparedKeysData(activeNotes);\n\n    let x_coord = this.xCoordinate;\n    let y_coord = this.yCoordinate;\n\n    const keyboardExtended = this.pianoKeyboard.concat(this.pianoKeyboard);\n\n    keyboardExtended.forEach((key, index) => {\n      const active = activeNotes[index].isActive;\n      this.ctx.lineWidth = 1;\n      this.ctx.strokeStyle = 'black';\n      if (key) {\n        this.ctx.fillStyle = 'white';\n        this.ctx.globalCompositeOperation = \"destination-over\";\n        this.ctx.fillRect(x_coord, y_coord, 30, 160);\n        this.ctx.strokeRect(x_coord, y_coord, 30, 160);\n      } else {\n        this.ctx.fillStyle = 'black';\n        this.ctx.globalCompositeOperation = \"source-over\";\n        this.ctx.fillRect(x_coord, y_coord, 22, 120);\n        this.ctx.strokeRect(x_coord, y_coord, 22, 120);\n      }\n\n      if (active) {\n        const pointCoordX = x_coord + (key ? 30 : 22) / 2 - (key ? 8 : 6);\n        const pointCoordY = key ? 145 : 115;\n        const height = key ? 20 : 14\n        this.ctx.globalCompositeOperation = \"source-over\";\n        this.ctx.fillStyle = activeNotes[index].isRoot ? 'gold' : '#26CC26'\n        this.ctx.fillRect(pointCoordX, pointCoordY, key ? 16 : 12, height);\n\n        this.ctx.beginPath();\n        this.ctx.font = '8px Nunito, sans-serif';\n        this.ctx.fillStyle = 'black'\n        const noteCoordX = activeNotes[index].note.length < 2 ? pointCoordX + 5 : pointCoordX;\n        this.ctx.fillText(activeNotes[index].note, noteCoordX, pointCoordY + height / 2 + 4);\n      }\n\n      if (key === true) x_coord += 20;\n      if (key === false && keyboardExtended[index + 1] !== false) x_coord += 10;\n      if (index === 4 || index === 11 || index === 16) x_coord += 10;\n    })\n  }\n}\n","export default class Guitar {\n  constructor(guitarCanvas, isSharp = true) {\n    this.canvas = guitarCanvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.isSharp = isSharp;\n  }\n\n  _guitarStrings = {\n    sharp: [\n      ['E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#'], // first\n      ['B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C', 'C#'],\n      ['G', 'G#', 'A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A'],\n      ['D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E'],\n      ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\n      ['E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#']\n    ],\n    flat: [\n      ['E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭'],\n      ['B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B', 'C', 'D♭'],\n      ['G', 'A♭', 'A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A'],\n      ['D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E'],\n      ['A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'],\n      ['E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭']\n    ]\n  }\n\n  setIsSharp(isSharp) {\n    this.isSharp = isSharp;\n  }\n\n  _getStrings() {\n    return this._guitarStrings[this.isSharp ? 'sharp' : 'flat'];\n  }\n\n  notesOnString = [];\n  isToRender = [];\n  width = 800;\n  height = 280;\n\n  renderGuitar(scale, root) {\n    this.scale = scale;\n    this.root = root;\n\n    this.canvasGuitarSetup();\n    this.getNotesOnFretBoard();\n    this.renderGuitarNotes(this.notesOnString);\n  };\n\n  canvasGuitarSetup () {\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.scale(6, 6);\n    this.ctx.globalCompositeOperation = \"source-over\";\n    this.ctx.lineWidth = '0.4'\n    const x_coord = 8\n    const y_coord = 3\n    const fretboardWidth = 120;\n    const fretboardHeight = 35;\n    const y_coord_string = 3.3;\n    const x_fret = x_coord;\n    const y_fret = y_coord;\n    this.ctx.strokeStyle = 'black'\n    this.ctx.fillStyle = '#a36f40';\n    this.ctx.strokeRect(x_coord, y_coord, fretboardWidth, fretboardHeight)\n    this.ctx.fillRect(x_coord, y_coord, fretboardWidth, fretboardHeight);\n\n    for (let i = 2; i <= 36; i += 6) { // generate strings\n      this.ctx.strokeStyle = 'lightgrey';\n      this.ctx.moveTo(x_coord, y_coord_string + i);\n      this.ctx.lineTo(x_coord + 120, y_coord_string + i);\n      this.ctx.stroke();\n    }\n\n    for (let i = 8; i <= 119; i += 8) { // generate frets\n      this.ctx.moveTo(x_fret + i, y_fret);\n      this.ctx.lineTo(x_fret + i, y_fret + fretboardHeight);\n      this.ctx.stroke();\n    }\n\n    // sets fret numbers\n    const step = 8.5\n    this.ctx.font = '4px Nunito, sans-serif';\n    this.ctx.fillStyle = 'black'\n    this.ctx.fillText('5', x_coord + (step * 4) + 1, 43);\n    this.ctx.fillText('7', x_coord + (step * 6), 43);\n    this.ctx.fillText('9', x_coord + (step * 8) - 1, 43);\n    this.ctx.fillText('12', x_coord + (step * 11) - 4, 43);\n  }\n\n  getNotesOnFretBoard() {\n    for (let i = 0; i < 6; i++) {\n      this.notesOnString[i] = this._getStrings()[i].filter((item) => this.scale.includes(item));\n      this.isToRender[i] = this._getStrings()[i].map((item) => this.notesOnString[i].includes(item));\n    }\n  }\n\n  renderGuitarNotes() {\n    let y_coord = -0.5\n    for (let i = 0; i < 6; i++) {\n      let x_coord = -4;\n      y_coord += 6;\n\n      for (let j = 0; j < 15; j++) {\n        if (this.isToRender[i][j] !== true) {\n          x_coord += 8; // if note is absent\n        } else {\n          this.ctx.beginPath();\n          this.ctx.arc(x_coord + 8, y_coord, 2, 0, 2 * Math.PI);\n          this.ctx.fillStyle = this._getStrings()[i][j] !== this.root ? '#26CC26' : 'gold'\n          this.ctx.fill()\n          this.ctx.beginPath();\n          this.ctx.font = '3px Nunito, sans-serif';\n          this.ctx.fillStyle = 'black'\n          this.ctx.fillText(this._getStrings()[i][j], x_coord + 8 - 1, y_coord + 1);\n          x_coord += 8;\n        }\n      }\n    }\n  }\n}\n","export default class Scale {\n  constructor(root, scaleType, isSharp = true) {\n    this.root = root;\n    this.scaleType = scaleType;\n    this.isSharp = isSharp;\n    this.scalePattern = this.scalePatterns[scaleType];\n  }\n\n  _notes = {\n    sharp: ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'],\n    flat: ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B']\n  }\n\n  scalePatterns = {\n    major: [0, 2, 4, 5, 7, 9, 11],\n    natural_minor: [0, 2, 3, 5, 7, 8, 10],\n    harmonic_minor: [0, 2, 3, 5, 7, 8, 11],\n    melodic_minor: [0, 2, 3, 5, 7, 9, 11],\n  };\n\n  setRoot(root) {\n    this.root = root;\n  }\n\n  setScaleType(scaleType) {\n    this.scaleType = scaleType;\n    this.scalePattern = this.scalePatterns[scaleType];\n  }\n\n  setIsSharp(isSharp) {\n    this.isSharp = isSharp;\n  }\n\n  getNotes() {\n    return this.isSharp ? this._notes.sharp : this._notes.flat;\n  }\n\n  getScale() {\n    const noteSet = this.getNotes();\n    const startPoint = noteSet.indexOf(this.root);\n    const sortedArr = noteSet.slice(startPoint).concat(noteSet.slice(0, startPoint));\n    return this.scalePattern.map(item => sortedArr[item]);\n  }\n}\n","export default function initSelect() {\n  const selected = document.querySelectorAll('.selected');\n  const optionsList = document.querySelectorAll('.select-box__option');\n\n  selected.forEach(item => {\n    item.addEventListener('click', () => {\n      const optionsContainer = item.parentNode.querySelector('.select-box__options');\n      optionsContainer.classList.toggle('active');\n    });\n  })\n\n  optionsList.forEach(option => {\n    option.addEventListener('click', (e) => {\n      const parent = e.target.closest('.select-box');\n      const eventType = parent.dataset.type;\n      const option = e.target.closest('.select-box__option')\n      const optionValue = option.dataset[eventType];\n      parent.querySelector('.selected').innerHTML = option.querySelector('label').innerHTML;\n      option.parentNode.classList.remove('active');\n      const eventDetail = {\n        eventType: eventType,\n        value: optionValue,\n      }\n      const changedSettings = new CustomEvent('changeSettings', { detail: eventDetail });\n      document.dispatchEvent(changedSettings);\n    });\n  });\n}\n","import romanize from './helpers/romanizeNumbers';\nimport Chord from './helpers/Chord';\nimport Keyboard from './helpers/Keyboard';\nimport Guitar from './helpers/Guitar';\nimport Scale from './helpers/Scale';\nimport initSelect from './helpers/customSelect';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const DEFAULT_ROOT = 'C';\n  const DEFAULT_SCALE_TYPE  = 'major';\n  const scaleCanvas = document.querySelector('.canvas');\n  const chordCanvas = document.querySelector('.chord__applicature');\n\n  initSelect();\n  const chordKyboard = new Keyboard(chordCanvas);\n  const keyboard = new Keyboard(scaleCanvas);\n  const guitar = new Guitar(scaleCanvas);\n  const chord = new Chord();\n  const scaleClass = new Scale(DEFAULT_ROOT, DEFAULT_SCALE_TYPE);\n  window.scaleClass = scaleClass;\n\n\t// default settings\n\tlet instrument = 'guitar';\n\n\tlet scale = [];\n\n\tconst rootNotes = document.querySelector('.select-root');\n\tconst diatonicChordField = document.querySelector('.progression__chords-diatonic');\n\tconst basicChordField = document.querySelector('.progression__chords-basic');\n\n  rootNotes.addEventListener('click', (e) => {\n    const target = e.target;\n    if (target.classList.contains('select-root__item')) {\n      scaleClass.setRoot(target.innerText);\n    }\n\n    if (target.classList.contains('select-root__alter')) {\n      scaleClass.setIsSharp(target.innerText.toLowerCase() === 'sharp');\n      rootNotes.querySelectorAll('.select-root__item').forEach((item, index) => {\n        item.innerText = scaleClass.getNotes()[index];\n        item.dataset.root = scaleClass.getNotes()[index].toLowerCase();\n      })\n    }\n\n    toggleActive();\n    main();\n  })\n\n  document.addEventListener('changeSettings', (e) => {\n    if (e.detail.eventType === 'instrument') {\n      instrument = e.detail.value;\n      main();\n      return;\n    }\n    scaleClass.setScaleType(e.detail.value);\n    main();\n  });\n\n\n  const main = () => {\n    scale = scaleClass.getScale();\n    chordKyboard.renderKeyboard(chord.calcChord(scaleClass.root));\n    printScaleTable(scale);\n    printDiatonicChords(chord.calcDiatonic(scale, scaleClass.scaleType));\n    setChordApplicatures();\n    keyboard.setIsSharp(scaleClass.isSharp);\n    chordKyboard.setIsSharp(scaleClass.isSharp);\n    chord.setIsSharp(scaleClass.isSharp);\n    guitar.setIsSharp(scaleClass.isSharp);\n    render(scale, instrument);\n  };\n\n\tconst toggleActive = () => {\n    rootNotes.querySelectorAll('.active').forEach(item => item.classList.remove('active'));\n    let curRoot = rootNotes.querySelector(`[data-root='${scaleClass.root.toLocaleLowerCase()}']`);\n    if (!curRoot) {\n      scaleClass.setRoot(scaleClass.getNotes()[0]);\n      curRoot = rootNotes.querySelector(`[data-root='${scaleClass.root.toLocaleLowerCase()}']`);\n    }\n    curRoot.classList.add('active');\n    rootNotes.querySelector(`[data-is-${scaleClass.isSharp ? 'sharp' : 'flat'}]`).classList.add('active');\n\t}\n\n\tconst printScaleTable = (scale) => {\n    const tableCells = document.querySelectorAll('.scale__notes td:not(:first-child)');\n    tableCells.forEach((item, index) => item.innerText = scale[index]);\n  }\n\n  const printDiatonicChords = (chords) => {\n    let mainSteps = '';\n    let commonSteps = '';\n    chords.forEach((item, index) => {\n      const sign = romanize(index + 1);\n      if ([0, 3, 4].includes(index)) {\n        mainSteps += `<span>${sign}: </span><span class=\"chord\">${item}</span><br>`\n      } else {\n        commonSteps += `<span>${sign}: </span><span class=\"chord\">${item}</span><br>`\n      }\n    })\n\n    diatonicChordField.innerHTML = mainSteps;\n    basicChordField.innerHTML = commonSteps;\n  }\n\n\tconst setChordApplicatures = () => {\n\t  const chords = document.querySelectorAll('.progression .chord');\n    const title = document.querySelector('.chord__title');\n    chords.forEach((item) => {\n      item.addEventListener('click', (e) => {\n        const chordNotes = chord.calcChord(e.target.innerText);\n        title.innerText = `Chord ${e.target.innerText}`;\n        chordKyboard.renderKeyboard(chordNotes);\n      })\n    })\n  }\n\n\t// ======================= canvas settings ========================\n\n\tconst render = (activeKeys, instrument) => {\n\t\tif (instrument === 'piano') {\n      keyboard.renderKeyboard(scale);\n\t\t} else if (instrument === 'guitar') {\n      guitar.renderGuitar(scale, scaleClass.root);\n\t\t}\n\t};\n\n  main();\n});\n\n"],"names":["$8dddf2b0897aa1fb$export$2e2bcd8739ae039","arabicNumber","NaN","digits","String","split","key","roman","i","pop","Array","join","$62373168d692ffbe$export$2e2bcd8739ae039","patterns","maj","m","dim","aug","isSharp","diatonicPatterns","major","natural_minor","harmonic_minor","melodic_minor","_notes","sharp","flat","_getNotes","this","setIsSharp","calcChord","chord","chordType","getChordType","startPoint","indexOf","getNote","sortedArr","slice","concat","map","item","filter","test","shift","includes","calcDiatonic","scale","scaleName","index","$e99b108d5cd6a38f$export$2e2bcd8739ae039","constructor","keyboardCanvas","canvas","ctx","getContext","pianoKeyboard","xCoordinate","yCoordinate","preparedKeysData","activeNotes","isActive","note","isRoot","renderKeyboard","clearRect","width","height","x_coord","y_coord","keyboardExtended","forEach","active","lineWidth","strokeStyle","fillStyle","globalCompositeOperation","fillRect","strokeRect","pointCoordX","pointCoordY","beginPath","font","noteCoordX","length","fillText","$b5da60489bd52486$export$2e2bcd8739ae039","guitarCanvas","_guitarStrings","_getStrings","notesOnString","isToRender","renderGuitar","root","canvasGuitarSetup","getNotesOnFretBoard","renderGuitarNotes","moveTo","lineTo","stroke","i1","y_fret","j","arc","Math","PI","fill","$4c36d83a0b570e4b$export$2e2bcd8739ae039","scaleType","scalePattern","scalePatterns","setRoot","setScaleType","getNotes","getScale","noteSet","$124acd6fc7fe54f9$export$2e2bcd8739ae039","selected","document","querySelectorAll","optionsList","addEventListener","parentNode","querySelector","classList","toggle","option1","e","parent","target","closest","eventType","dataset","type","option","optionValue","innerHTML","remove","changedSettings","CustomEvent","detail","value","dispatchEvent","scaleCanvas","chordCanvas","chordKyboard","keyboard","guitar","scaleClass","window","instrument1","scale1","rootNotes","diatonicChordField","basicChordField","contains","innerText","toLowerCase","toggleActive","main","printScaleTable","printDiatonicChords","setChordApplicatures","render","curRoot","toLocaleLowerCase","add","chords","mainSteps","commonSteps","sign","title","chordNotes","activeKeys","instrument"],"version":3,"file":"index.a10db2cf.js.map"}